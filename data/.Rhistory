R.version()
R.version
# Loop through each unique species and create separate plots
for (sp in species_list) {
# Filter data for the specific species
bird.species.territories.plot  <- ggplot(filter(territoryguild.data, species_4code_IBP == sp), aes(x = year, y = territories, color = sitecode, group = sitecode)) +
geom_point(size = 1.2) + # Add points for better visibility
geom_smooth(method = "lm") +
theme_pubr() +
theme(legend.position = "none", # Removes the legend
panel.spacing.x = unit(1.0, "cm"),
strip.text.x = element_text(size = 8, face = "bold"),
strip.background = element_blank(),
plot.title = element_text(size = 12, face = "bold", hjust = 0.5, color = "black", margin = margin(b = 15)), # Centers the title
axis.title.x.bottom = element_text(size = 12, face = "bold", colour = "black", margin = margin(t = 15)), # Customizes x-axis title
axis.title.y.left = element_text(size = 12, face = "bold", colour = "black", margin = margin(r = 15)), # Customizes y-axis title
axis.text.x = element_text(size = 8, color = "black"),
axis.text.y.left = element_text(size = 8, color = "black")) +
facet_wrap(~ sitecode, ncol = 3, nrow = 5) +  # Separate plots per site
labs(title = paste("Territories of", sp, "over time at Long Point, Ontario, Canada, 1991-2021"),
x = "Year",
y = "Number of territories") +
xlim(1991, 2021) # Set x-limit minimum and maximum
# Print plot in the R console
print(bird.species.territories.plot)
}
# Clear all objects from the R Environment prior to data exploration
rm(list = ls())  # Remove all objects
# To reduce unnecessary loading, run 'options' function
options(warn = -1)  # Suppress warnings if packages are already loaded
# Identify required packages
list.of.packages <- c("ggplot2",
"dplyr",
"tidyr",
"patchwork",
"broom",
"plotly",
"ggpubr",
"lme4",
"htmlwidgets",
"mgcv",
"tidyverse",
"pheatmap",
"vegan",
"purrr")
# Create function to install packages if they are missing from the library
install_if_missing <- function(pkg) {
if (!requireNamespace(pkg, quietly = TRUE)) install.packages(pkg)
}
# Install missing packages
lapply(list.of.packages, install_if_missing)
# Load required packages
lapply(list.of.packages, library, character.only = TRUE)
# Import data from csv file, saved in the 'data' sub-folder of the rproject
bird.abund.data <- read.csv("../data/bird_spterritories_presabs.csv")
# Import data from csv file, saved in the 'data' sub-folder of the rproject
bird.abund.data <- read.csv("../data/bird_spterritories_abund.csv")
setwd("D:/r_projects/phd_longpoint_breedingbirds")
# Import data from csv file, saved in the 'data' sub-folder of the rproject
bird.abund.data <- read.csv("../data/bird_spterritories_abund.csv")
# Import data from csv file, saved in the 'data' sub-folder of the rproject
bird.abund.data <- read.csv("bird_spterritories_abund.csv")
getwd()
# Import data from csv file, saved in the 'data' sub-folder of the rproject
bird.abund.data <- read.csv("/data/bird_spterritories_abund.csv")
setwd("D:/r_projects/phd_longpoint_breedingbirds/data")
# Import data from csv file, saved in the 'data' sub-folder of the rproject
bird.abund.data <- read.csv("bird_spterritories_abund.csv")
# Import data from csv file, saved in the 'data' sub-folder of the rproject
speciesdescription.data <- read.csv("../data/bird_spcharacteristics.csv", header = T)
# Identify summary information about the data (e.g., mean, median, min and max)
summary(speciesdescription.data) # Summarize key information within the dataset
# Join species information data "speciesdescription.data" with territory data for analyses
territoryguild.data <- full_join(bird.abund.data, speciesdescription.data, by = c("species_4code_IBP"))
# Review column names for reference in analyses
names(territoryguild.data) # Identify column names within the dataset
# Get list of species to filter data by species
species_list <- unique(territoryguild.data$species_4code_IBP)
# Loop through each unique species and create separate plots
for (sp in species_list) {
# Filter data for the specific species
bird.species.territories.plot  <- ggplot(filter(territoryguild.data, species_4code_IBP == sp), aes(x = year, y = territories, color = sitecode, group = sitecode)) +
geom_point(size = 1.2) + # Add points for better visibility
geom_smooth(method = "lm") +
theme_pubr() +
theme(legend.position = "none", # Removes the legend
panel.spacing.x = unit(1.0, "cm"),
strip.text.x = element_text(size = 8, face = "bold"),
strip.background = element_blank(),
plot.title = element_text(size = 12, face = "bold", hjust = 0.5, color = "black", margin = margin(b = 15)), # Centers the title
axis.title.x.bottom = element_text(size = 12, face = "bold", colour = "black", margin = margin(t = 15)), # Customizes x-axis title
axis.title.y.left = element_text(size = 12, face = "bold", colour = "black", margin = margin(r = 15)), # Customizes y-axis title
axis.text.x = element_text(size = 8, color = "black"),
axis.text.y.left = element_text(size = 8, color = "black")) +
facet_wrap(~ sitecode, ncol = 3, nrow = 5) +  # Separate plots per site
labs(title = paste("Territories of", sp, "over time at Long Point, Ontario, Canada, 1991-2021"),
x = "Year",
y = "Number of territories") +
xlim(1991, 2021) # Set x-limit minimum and maximum
# Print plot in the R console
print(bird.species.territories.plot)
}
# Get list of species to filter data by species
nest_guild_list <- unique(territoryguild.data$nest_guild_BOTW)
# Loop through each unique species and create separate plots
for (sp in nest_guild_list) {
# Filter data for the specific species
bird.species.territories.plot  <- ggplot(filter(territoryguild.data,
nest_guild_BOTW == sp),
aes(x = year,
y = territories,
color = sitecode,
group = sitecode)) +
geom_point(size = 1.2) + # Add points for better visibility
geom_smooth(method = "lm") +
theme_pubr() +
theme(legend.position = "none", # Removes the legend
panel.spacing.x = unit(1.0, "cm"),
strip.text.x = element_text(size = 8, face = "bold"),
strip.background = element_blank(),
plot.title = element_text(size = 12, face = "bold", hjust = 0.5, color = "black", margin = margin(b = 15)), # Centers the title
axis.title.x.bottom = element_text(size = 12, face = "bold", colour = "black", margin = margin(t = 15)), # Customizes x-axis title
axis.title.y.left = element_text(size = 12, face = "bold", colour = "black", margin = margin(r = 15)), # Customizes y-axis title
axis.text.x = element_text(size = 8, color = "black"),
axis.text.y.left = element_text(size = 8, color = "black")) +
facet_wrap(~ sitecode, ncol = 3, nrow = 5) +  # Separate plots per site
labs(title = paste("Territories of", sp, "over time at Long Point, Ontario, Canada, 1991-2021"),
x = "Year",
y = "Number of territories") +
xlim(1991, 2021) # Set x-limit minimum and maximum
# Print plot in the R console
print(bird.species.territories.plot)
}
# Review column names for reference in analyses
names(territoryguild.data) # Identify column names within the dataset
# Summarize species abundance by guild
guild_summary <- territoryguild.data %>%
group_by(habitat_guild_BOTW) %>%
summarise(total_abundance = sum(territories))
# Loop through each guild and create a separate plot
guilds <- unique(territoryguild.data$habitat_guild_BOTW)
# Create multiple plots (nest guild) for each site
for(g in guilds) {
guild_data <- territoryguild.data[territoryguild.data$habitat_guild_BOTW == g, ]
# Create a ggplot for each guild
p <- ggplot(guild_data, aes(x = year,
y = guild_summary,
group = sitecode)) +
geom_point(size = 1.2) + # Add points for better visibility
geom_smooth(method = "lm") +
theme_pubr() +
theme(legend.position = "none", # Removes the legend
panel.spacing.x = unit(1.0, "cm"),
strip.text.x = element_text(size = 8, face = "bold"),
strip.background = element_blank(),
plot.title = element_text(size = 12, face = "bold", hjust = 0.5, color = "black", margin = margin(b = 15)), # Centers the title
axis.title.x.bottom = element_text(size = 12, face = "bold", colour = "black", margin = margin(t = 15)), # Customizes x-axis title
axis.title.y.left = element_text(size = 12, face = "bold", colour = "black", margin = margin(r = 15)), # Customizes y-axis title
axis.text.x = element_text(size = 8, color = "black"),
axis.text.y.left = element_text(size = 8, color = "black")) +
facet_wrap(~ sitecode, ncol = 3, nrow = 5) +  # Separate plots per site
labs(title = paste("Territories of", sp, "over time at Long Point, Ontario, Canada, 1991-2021"),
x = "Year",
y = "Number of territories") +
xlim(1991, 2021) # Set x-limit minimum and maximum
print(p)  # Print the plot for each guild
}
# Create multiple plots (nest guild) for each site
for(g in guilds) {
# Create a ggplot for each guild
p <- ggplot(filter(territoryguild.data, habitat_guild_BOTW == g),
aes(x = year,
y = guild_summary,
group = sitecode)) +
geom_point(size = 1.2) + # Add points for better visibility
geom_smooth(method = "lm") +
theme_pubr() +
theme(legend.position = "none", # Removes the legend
panel.spacing.x = unit(1.0, "cm"),
strip.text.x = element_text(size = 8, face = "bold"),
strip.background = element_blank(),
plot.title = element_text(size = 12, face = "bold", hjust = 0.5, color = "black", margin = margin(b = 15)), # Centers the title
axis.title.x.bottom = element_text(size = 12, face = "bold", colour = "black", margin = margin(t = 15)), # Customizes x-axis title
axis.title.y.left = element_text(size = 12, face = "bold", colour = "black", margin = margin(r = 15)), # Customizes y-axis title
axis.text.x = element_text(size = 8, color = "black"),
axis.text.y.left = element_text(size = 8, color = "black")) +
facet_wrap(~ sitecode, ncol = 3, nrow = 5) +  # Separate plots per site
labs(title = paste("Territories of", sp, "over time at Long Point, Ontario, Canada, 1991-2021"),
x = "Year",
y = "Number of territories") +
xlim(1991, 2021) # Set x-limit minimum and maximum
print(p)  # Print the plot for each guild
}
View(p)
print(p)
# Create multiple plots (nest guild) for each site
for(g in guilds) {
# Create a ggplot for each guild
p <- ggplot(filter(territoryguild.data, habitat_guild_BOTW == g),
aes(x = year,
y = guild_summary,
group = sitecode)) +
geom_smooth(method = "lm") +
theme_pubr() +
theme(legend.position = "none", # Removes the legend
panel.spacing.x = unit(1.0, "cm"),
strip.text.x = element_text(size = 8, face = "bold"),
strip.background = element_blank(),
plot.title = element_text(size = 12, face = "bold", hjust = 0.5, color = "black", margin = margin(b = 15)), # Centers the title
axis.title.x.bottom = element_text(size = 12, face = "bold", colour = "black", margin = margin(t = 15)), # Customizes x-axis title
axis.title.y.left = element_text(size = 12, face = "bold", colour = "black", margin = margin(r = 15)), # Customizes y-axis title
axis.text.x = element_text(size = 8, color = "black"),
axis.text.y.left = element_text(size = 8, color = "black")) +
facet_wrap(~ sitecode, ncol = 3, nrow = 5) +  # Separate plots per site
labs(title = paste("Territories of", sp, "over time at Long Point, Ontario, Canada, 1991-2021"),
x = "Year",
y = "Number of territories") +
xlim(1991, 2021) # Set x-limit minimum and maximum
print(p)  # Print the plot for each guild
}
