group_by(sitecode) %>%
mutate(cumulative_richness = cumsum(new_species)) %>%  # Accumulate species richness over time
rename(year = first_year)  # Rename for consistency
# visualize
ggplot(sac_time, aes(x = year, y = cumulative_richness, group = sitecode)) +
geom_smooth(method = "loess", se = FALSE, color = "red") +
geom_point() +
facet_wrap(~sitecode, scales = "free_y") +  # Separate plots for each site
theme_pubr() +
theme(legend.position = "none", # Removes the legend
panel.spacing.x = unit(1.0, "cm"),
strip.text.x = element_text(size = 8, face = "bold"),
strip.background = element_blank(),
plot.title = element_text(size = 12, face = "bold", hjust = 0.5, color = "black", margin = margin(b = 15)), # Centers the title
axis.title.x.bottom = element_text(size = 12, face = "bold", colour = "black", margin = margin(t = 15)), # Customizes x-axis title
axis.title.y.left = element_text(size = 12, face = "bold", colour = "black", margin = margin(r = 15)), # Customizes y-axis title
axis.text.x = element_text(size = 8, color = "black"),
axis.text.y.left = element_text(size = 8, color = "black")) +
facet_wrap(~ sitecode, ncol = 3, nrow = 5, scales = "free_y") +  # Separate plots per site
labs(title = "Species accumulation curve over time per site
at Long Point, Ontario, Canada, 1991-2021",
x = "Year",
y = "Cumulative number of species") +
xlim(1991, 2021) + # Set x-limit minimum and maximum
scale_y_continuous(limits = c(0, NA))
# visualize
ggplot(sac_time,
aes(x = year,
y = cumulative_richness,
group = sitecode)) +
geom_smooth(method = "loess",
color = "black") +
geom_point() +
facet_wrap(~sitecode,
scales = "free_y") +  # Separate plots for each site
theme_pubr() +
theme(legend.position = "none", # Removes the legend
panel.spacing.x = unit(1.0, "cm"),
strip.text.x = element_text(size = 8,
face = "bold"),
strip.background = element_blank(),
plot.title = element_text(size = 12,
face = "bold",
hjust = 0.5,
color = "black",
margin = margin(b = 15)), # Centers the title
axis.title.x.bottom = element_text(size = 12,
face = "bold",
colour = "black",
margin = margin(t = 15)), # Customizes x-axis title
axis.title.y.left = element_text(size = 12,
face = "bold",
colour = "black",
margin = margin(r = 15)), # Customizes y-axis title
axis.text.x = element_text(size = 8,
color = "black"),
axis.text.y.left = element_text(size = 8,
color = "black")) +
facet_wrap(~ sitecode,
ncol = 3,
nrow = 5,
scales = "free_y") +  # Separate plots per site
labs(title = "Species accumulation curve over time per site
at Long Point, Ontario, Canada, 1991-2021",
x = "Year",
y = "Cumulative number of species") +
xlim(1991, 2021) + # Set x-limit minimum and maximum
scale_y_continuous(limits = c(0, NA))
# visualize
ggplot(sac_time,
aes(x = year,
y = cumulative_richness,
group = sitecode)) +
geom_smooth(method = "loess",
color = "black") +
geom_point() +
facet_wrap(~sitecode,
scales = "free_y") +  # Separate plots for each site
theme_pubr() +
theme(legend.position = "none", # Removes the legend
panel.spacing.x = unit(1.0, "cm"),
strip.text.x = element_text(size = 8,
face = "bold"),
strip.background = element_blank(),
plot.title = element_text(size = 12,
face = "bold",
hjust = 0.5,
color = "black",
margin = margin(b = 15)), # Centers the title
axis.title.x.bottom = element_text(size = 12,
face = "bold",
colour = "black",
margin = margin(t = 15)), # Customizes x-axis title
axis.title.y.left = element_text(size = 12,
face = "bold",
colour = "black",
margin = margin(r = 15)), # Customizes y-axis title
axis.text.x = element_text(size = 8,
color = "black"),
axis.text.y.left = element_text(size = 8,
color = "black")) +
facet_wrap(~ sitecode,
ncol = 3,
nrow = 5,
scales = "free_y") +  # Separate plots per site
labs(title = "Species accumulation curve over time per site
at Long Point, Ontario, Canada, 1991-2021",
x = "Year",
y = "Cumulative number of species") +
xlim(1991, 2021) # Set x-limit minimum and maximum
# visualize
ggplot(sac_time,
aes(x = year,
y = cumulative_richness,
group = sitecode)) +
geom_smooth(method = "loess",
color = "black") +
geom_point() +
facet_wrap(~sitecode,
scales = "free_y") +  # Separate plots for each site
theme_pubr() +
theme(legend.position = "none", # Removes the legend
panel.spacing.x = unit(1.0, "cm"),
strip.text.x = element_text(size = 8,
face = "bold"),
strip.background = element_blank(),
plot.title = element_text(size = 12,
face = "bold",
hjust = 0.5,
color = "black",
margin = margin(b = 15)), # Centers the title
axis.title.x.bottom = element_text(size = 12,
face = "bold",
colour = "black",
margin = margin(t = 15)), # Customizes x-axis title
axis.title.y.left = element_text(size = 12,
face = "bold",
colour = "black",
margin = margin(r = 15)), # Customizes y-axis title
axis.text.x = element_text(size = 8,
color = "black"),
axis.text.y.left = element_text(size = 8,
color = "black")) +
facet_wrap(~ sitecode,
ncol = 3,
nrow = 5,
scales = "free_y") +  # Separate plots per site
labs(title = "Species accumulation curve over time per site
at Long Point, Ontario, Canada, 1991-2021",
x = "Year",
y = "Cumulative number of species") +
xlim(1991, 2021) + # Set x-limit minimum and maximum
ylim(0,NA)
# visualize
ggplot(sac_time,
aes(x = year,
y = cumulative_richness,
group = sitecode)) +
geom_smooth(method = "loess",
color = "black") +
geom_point() +
facet_wrap(~sitecode,
scales = "free_y") +  # Separate plots for each site
theme_pubr() +
theme(legend.position = "none", # Removes the legend
panel.spacing.x = unit(1.0, "cm"),
strip.text.x = element_text(size = 8,
face = "bold"),
strip.background = element_blank(),
plot.title = element_text(size = 12,
face = "bold",
hjust = 0.5,
color = "black",
margin = margin(b = 15)), # Centers the title
axis.title.x.bottom = element_text(size = 12,
face = "bold",
colour = "black",
margin = margin(t = 15)), # Customizes x-axis title
axis.title.y.left = element_text(size = 12,
face = "bold",
colour = "black",
margin = margin(r = 15)), # Customizes y-axis title
axis.text.x = element_text(size = 8,
color = "black"),
axis.text.y.left = element_text(size = 8,
color = "black")) +
facet_wrap(~ sitecode,
ncol = 3,
nrow = 5,
scales = "free_y") +  # Separate plots per site
labs(title = "Species accumulation curve over time per site
at Long Point, Ontario, Canada, 1991-2021",
x = "Year",
y = "Cumulative number of species") +
xlim(1991, 2021) + # Set x-limit minimum and maximum
ylim(0,NA) +
scale_y_continuous(limits = c(0, NA))
# visualize
ggplot(sac_time,
aes(x = year,
y = cumulative_richness,
group = sitecode)) +
geom_smooth(method = "loess",
color = "black") +
geom_point() +
facet_wrap(~sitecode,
scales = "free_y") +  # Separate plots for each site
theme_pubr() +
theme(legend.position = "none", # Removes the legend
panel.spacing.x = unit(1.0, "cm"),
strip.text.x = element_text(size = 8,
face = "bold"),
strip.background = element_blank(),
plot.title = element_text(size = 12,
face = "bold",
hjust = 0.5,
color = "black",
margin = margin(b = 15)), # Centers the title
axis.title.x.bottom = element_text(size = 12,
face = "bold",
colour = "black",
margin = margin(t = 15)), # Customizes x-axis title
axis.title.y.left = element_text(size = 12,
face = "bold",
colour = "black",
margin = margin(r = 15)), # Customizes y-axis title
axis.text.x = element_text(size = 8,
color = "black"),
axis.text.y.left = element_text(size = 8,
color = "black")) +
facet_wrap(~ sitecode,
ncol = 3,
nrow = 5,
scales = "free_y") +  # Separate plots per site
labs(title = "Species accumulation curve over time per site
at Long Point, Ontario, Canada, 1991-2021",
x = "Year",
y = "Cumulative number of species") +
xlim(1991, 2021) + # Set x-limit minimum and maximum
ylim(0,NA)
# visualize
ggplot(sac_time,
aes(x = year,
y = cumulative_richness,
group = sitecode)) +
geom_smooth(method = "loess",
color = "black") +
geom_point() +
facet_wrap(~sitecode,
scales = "free_y") +  # Separate plots for each site
theme_pubr() +
theme(legend.position = "none", # Removes the legend
panel.spacing.x = unit(1.0, "cm"),
strip.text.x = element_text(size = 8,
face = "bold"),
strip.background = element_blank(),
plot.title = element_text(size = 12,
face = "bold",
hjust = 0.5,
color = "black",
margin = margin(b = 15)), # Centers the title
axis.title.x.bottom = element_text(size = 12,
face = "bold",
colour = "black",
margin = margin(t = 15)), # Customizes x-axis title
axis.title.y.left = element_text(size = 12,
face = "bold",
colour = "black",
margin = margin(r = 15)), # Customizes y-axis title
axis.text.x = element_text(size = 8,
color = "black"),
axis.text.y.left = element_text(size = 8,
color = "black")) +
facet_wrap(~ sitecode,
ncol = 3,
nrow = 5,
scales = "free_y") +  # Separate plots per site
labs(title = "Species accumulation curve over time per site
at Long Point, Ontario, Canada, 1991-2021",
x = "Year",
y = "Cumulative number of species") +
xlim(1991, 2021) + # Set x-limit minimum and maximum
scale_y_continuous(limits = c(0, NA))
# Convert to presence-absence
site_year_species <- bird.abund.data %>%
group_by(sitecode, year, species_4code_IBP) %>%
summarize(present = any(territories > 0), .groups = "drop") %>%
filter(present)  # keep only rows where species was present
# Accumulate species over time per site
sac_time <- site_year_species %>%
arrange(sitecode, year) %>%
group_by(sitecode) %>%
mutate(
year = as.integer(year),
species_seen = map2(year, sitecode, ~ {
species_so_far <- site_year_species %>%
filter(sitecode == .y, year <= .x) %>%
pull(species_4code_IBP) %>%
unique()
length(species_so_far)
})
) %>%
unnest(species_seen) %>%
distinct(sitecode, year, .keep_all = TRUE)
# Plot
ggplot(sac_time, aes(x = year,
y = species_seen,
group = sitecode)) +
geom_smooth(method = "loess",
color = "black",
size = 1) +
geom_point(color = "black",
size = 2) +
facet_wrap(~sitecode,
scales = "free_y") +
theme_pubr() +
theme(legend.position = "none", # Removes the legend
panel.spacing.x = unit(1.0, "cm"),
strip.text.x = element_text(size = 8,
face = "bold"),
strip.background = element_blank(),
plot.title = element_text(size = 12,
face = "bold",
hjust = 0.5,
color = "black",
margin = margin(b = 15)), # Centers the title
axis.title.x.bottom = element_text(size = 12,
face = "bold",
colour = "black",
margin = margin(t = 15)), # Customizes x-axis title
axis.title.y.left = element_text(size = 12,
face = "bold",
colour = "black",
margin = margin(r = 15)), # Customizes y-axis title
axis.text.x = element_text(size = 8,
color = "black"),
axis.text.y.left = element_text(size = 8,
color = "black")) +
facet_wrap(~ sitecode,
ncol = 3,
nrow = 5,
scales = "free_y") +  # Separate plots per site
labs(title = "Species accumulation curve over time per site
at Long Point, Ontario, Canada, 1991-2021",
x = "Year",
y = "Cumulative number of species") +
xlim(1991, 2021) + # Set x-limit minimum and maximum
scale_y_continuous(limits = c(0, NA))
# Plot
ggplot(sac_time, aes(x = year,
y = species_seen,
group = sitecode)) +
geom_smooth(method = "loess",
color = "black",
size = 1) +
geom_point(color = "black",
size = 2) +
facet_wrap(~sitecode,
scales = "free_y") +
theme_pubr() +
theme(legend.position = "none", # Removes the legend
panel.spacing.x = unit(1.0, "cm"),
strip.text.x = element_text(size = 8,
face = "bold"),
strip.background = element_blank(),
plot.title = element_text(size = 12,
face = "bold",
hjust = 0.5,
color = "black",
margin = margin(b = 15)), # Centers the title
axis.title.x.bottom = element_text(size = 12,
face = "bold",
colour = "black",
margin = margin(t = 15)), # Customizes x-axis title
axis.title.y.left = element_text(size = 12,
face = "bold",
colour = "black",
margin = margin(r = 15)), # Customizes y-axis title
axis.text.x = element_text(size = 8,
color = "black"),
axis.text.y.left = element_text(size = 8,
color = "black")) +
facet_wrap(~ sitecode,
ncol = 3,
nrow = 5,
scales = "free_y") +  # Separate plots per site
labs(title = "Species accumulation curves over time for each site
at Long Point, Ontario, Canada, 1991-2021",
x = "Year",
y = "Cumulative species richness") +
xlim(1991, 2021) + # Set x-limit minimum and maximum
scale_y_continuous(limits = c(0, NA))
# Summarize total abundance per species across all years and sites
top_species <- bird.abund.data %>%
group_by(species_4code_IBP) %>%
summarise(Total_Territories = sum(territories, na.rm = TRUE)) %>%
arrange(desc(Total_Territories)) %>%
slice_max(Total_Territories, n = 10)
# Plot
ggplot(top_species, aes(x = reorder(species_4code_IBP, -Total_Territories),
y = Total_Territories)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = "Top 10 Most Abundant Bird Species (Territories)",
x = "Species",
y = "Total Territories") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
plot.title = element_text(size = 14, face = "bold"))
# Plot
ggplot(top_species, aes(x = reorder(species_4code_IBP,
-Total_Territories),
y = Total_Territories)) +
geom_bar(stat = "identity",
fill = "steelblue") +
theme_pubr() +
labs(title = "Ten most abundant bird species from 1991-2021
at Long Point, Ontario, Canada",
x = "Species",
y = "Total territories") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1,
size = 10),
plot.title = element_text(size = 14,
face = "bold"))
# Summarize presence (1 if territories > 0) per year-species
species_turnover <- bird.abund.data %>%
group_by(year, species_4code_IBP) %>%
summarise(Present = as.integer(any(territories > 0)), .groups = "drop") %>%
pivot_wider(names_from = species_4code_IBP, values_from = Present, values_fill = 0) %>%
arrange(year)  # ensure rows are in chronological order
# Create matrix for heatmap (remove year column for matrix, set row names)
species_matrix <- as.matrix(species_turnover[,-1])
rownames(species_matrix) <- species_turnover$year
# Plot heatmap
pheatmap(species_matrix,
cluster_rows = FALSE,
cluster_cols = TRUE,
fontsize_row = 10,
fontsize_col = 6,
color = colorRampPalette(c("white", "black"))(10),
main = "Species Turnover Over Time (Presence/Absence)")
# Filter to years of interest
community_data_subset <- bird.abund.data %>%
filter(year %in% c(1991, 2016, 2021))
# Step 2: Summarize abundance by site-year-species (or just year-species if no site detail needed)
community_matrix <- community_data_subset %>%
group_by(year, species_4code_IBP) %>%
summarise(total_abundance = sum(territories, na.rm = TRUE), .groups = "drop") %>%
pivot_wider(names_from = species_4code_IBP, values_from = total_abundance, values_fill = 0)
# Step 3: Extract metadata and community matrix separately
year_labels <- community_matrix$year
comm_matrix <- community_matrix %>% select(-year)
# Step 4: Run NMDS using Bray-Curtis distance
set.seed(123)  # for reproducibility
nmds_result <- metaMDS(comm_matrix, distance = "bray", k = 2, trymax = 100)
# Step 5: Create NMDS plot
nmds_df <- as.data.frame(nmds_result$points)
nmds_df$year <- as.factor(year_labels)
ggplot(nmds_df, aes(x = MDS1, y = MDS2, color = year)) +
geom_point(size = 4) +
theme_minimal() +
labs(title = "NMDS of Bird Community Composition (1991, 2016, 2021)",
x = "NMDS Axis 1", y = "NMDS Axis 2")
# Extract species and site scores from NMDS result
site_scores <- as.data.frame(scores(nmds_result, display = "sites"))
site_scores$year <- as.factor(year_labels)
species_scores <- as.data.frame(scores(nmds_result, display = "species"))
species_scores$species <- rownames(species_scores)
# Plot both site (years) and species positions
ggplot() +
# Site (year-level) scores
geom_point(data = site_scores, aes(x = MDS1, y = MDS2, color = year), size = 4) +
# Species scores as text labels
geom_text(data = species_scores, aes(x = MDS1, y = MDS2, label = species),
size = 3, color = "gray30", alpha = 0.7) +
theme_minimal() +
labs(title = "NMDS of Bird Community (with Species Overlay)",
x = "NMDS Axis 1", y = "NMDS Axis 2") +
theme(legend.title = element_blank())
# Step 5: Create NMDS plot
nmds_df <- as.data.frame(nmds_result$points)
nmds_df$year <- as.factor(year_labels)
# Plot both site (years) and species positions
ggplot() +
# Site (year-level) scores
geom_point(data = site_scores, aes(x = MDS1, y = MDS2, color = year), size = 4) +
# Species scores as text labels
geom_text(data = species_scores, aes(x = MDS1, y = MDS2, label = species),
size = 3, color = "gray30", alpha = 0.7) +
theme_minimal() +
labs(title = "NMDS of Bird Community (with Species Overlay)",
x = "NMDS Axis 1", y = "NMDS Axis 2") +
theme(legend.title = element_blank())
View(nmds_result)
# Create a site-species matrix (presence-absence)
species.diversity.matrix <- bird.abund.data %>%
group_by(year, sitecode, species_4code_IBP) %>%
summarise(total_territories = sum(territories), .groups = "drop") %>%
spread(species_4code_IBP, total_territories, fill = 0)
# Compute Jaccard or Bray-Curtis Dissimilarity
jaccard_dist <- vegdist(species.diversity.matrix[,-2], method = "jaccard")
bray_dist <- vegdist(species.diversity.matrix[,-2], method = "bray")
# Perform Hierarchical Clustering
hc <- hclust(jaccard_dist, method = "average")
# Plot Dendrogram
plot(hc, main = "Hierarchical Clustering of Sites (Jaccard)", xlab = "Sites")
#-----------------------------------------------------------------------------#
# 1.1 Clear all objects from the R Environment prior to data exploration
#-----------------------------------------------------------------------------#
system("git --version")
# Check version of R for script
R.version.string # version R check
